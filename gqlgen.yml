# Where are all the schema files located? globs are supported eg  src/**/*.graphqls
schema:
  - graph/types/*.graphqls

# Where should the generated server code go?
exec:
  filename: graph/generated/generated.go
  package: generated

# Uncomment to enable federation
# federation:
#   filename: graph/generated/federation.go
#   package: generated

# Where should any generated models go?
model:
  filename: graph/model/models_gen.go
  package: model

# Where should the resolver implementations go?
resolver:
  layout: follow-schema
  dir: graph/resolver
  package: resolver

# Optional: turn on use `gqlgen:"fieldName"` tags in your models
# struct_tag: json

# Optional: turn on to use []Thing instead of []*Thing
# omit_slice_element_pointers: false

# Optional: set to speed up generation time by not performing a final validation pass.
# skip_validation: true

# gqlgen will search for any type names in the schema in these go packages
# if they match it will use them, otherwise it will generate them.
autobind:
  - "github.com/delphis-inc/delphisbe/graph/model"

# This section declares type mapping between the GraphQL and go type systems
#
# The first line in each type will be used as defaults for resolver arguments and
# modelgen, the others will be allowed when binding to fields. Configure them to
# your liking
models:
  ID:
    model:
      - github.com/99designs/gqlgen/graphql.ID
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32
  Int:
    model:
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32
  Discussion:
    fields:
      posts:
        resolver: true
      participants:
        resolver: true
      moderator:
        resolver: true
      tags:
        resolver: true
      discussionJoinability:
        resolver: true
  Moderator:
    fields:
      discussion:
        resolver: true
      userProfile:
        resolver: true
  Participant:
    fields:
      discussion:
        resolver: true
      flair:
        resolver: true
      viewer:
        resolver: true
      discussionNotificationPreferences:
        resolver: true
      posts:
        resolver: true
  Post:
    fields:
      discussion:
        resolver: true
      participant:
        resolver: true
  PostBookmark:
    fields:
      discussion:
        resolver: true
      post:
        resolver: true
  User:
    fields:
      participants:
        resolver: true
      viewers:
        resolver: true
      profile:
        resolver: true
      flairs:
        resolver: true
  UserProfile:
    fields:
      moderatedDiscussions:
        resolver: true
  Viewer:
    fields:
      notificationPreferences:
        resolver: true
      discussion:
        resolver: true
      lastPostViewed:
        resolver: true
      bookmarks:
        resolver: true
  DiscussionLinkAccess:
    fields:
      inviteLinkURL:
        resolver: true
      vipInviteLinkURL:
        resolver: true
