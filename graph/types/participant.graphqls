type Participant implements Entity & DiscussionSubscriptionEntity {
    # The UUID for this participant.
    id: ID!
    # Fetching a participant directly is okay because we have no link back to who the user is.
    participantID: Int
    # Link to the discussion. May be null if the discussion is deleted or unavailable.
    discussion: Discussion
    # As a participant is also a viewer, this exposes the viewer settings
    viewer: Viewer!
    # Preferences for notifications for this discussion
    discussionNotificationPreferences: DiscussionNotificationPreferences!
    # Gets a list of all posts created by this participant in the given discussion.
    posts: [Post!]
    # Whether to include a link to their user profile
    isAnonymous: Boolean!
    gradientColor: GradientColor
    # The flair that has been assigned to this participant if any
    flair: Flair

    inviter: Participant!
    hasJoined: Boolean!

    userProfile: UserProfile

    isBanned: Boolean!

    # The participant's display name if they are anonymous
    anonDisplayName: String

    # Seconds remaining before the user will become unmuted again
    # (i.e. capable of posting). This is not a DateTime in order
    # to avoid any timezone or clock time skew problems. The seconds
    # are calculated relatively to the timestamp of the query.
    mutedForSeconds: Int
}
